import React, { useState } from "react";
import { base44 } from "@/api/base44Client";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { 
  GraduationCap, 
  BookOpen, 
  CheckCircle, 
  Lock,
  Clock,
  Award
} from "lucide-react";
import { motion } from "framer-motion";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";

export default function Academy() {
  const [selectedContent, setSelectedContent] = useState(null);
  const queryClient = useQueryClient();

  const { data: contents = [] } = useQuery({
    queryKey: ['educationalContents'],
    queryFn: () => base44.entities.EducationalContent.list(),
  });

  const completeContentMutation = useMutation({
    mutationFn: (contentId) => 
      base44.entities.EducationalContent.update(contentId, { completed: true }),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['educationalContents'] });
      setSelectedContent(null);
    },
  });

  const completedCount = contents.filter(c => c.completed).length;
  const totalExperience = contents
    .filter(c => c.completed)
    .reduce((sum, c) => sum + (c.experience_points || 0), 0);

  const difficultyColors = {
    iniciante: 'bg-green-100 text-green-700 border-green-300',
    intermediario: 'bg-yellow-100 text-yellow-700 border-yellow-300',
    avancado: 'bg-red-100 text-red-700 border-red-300'
  };

  const categoryColors = {
    agua: 'from-blue-500 to-cyan-500',
    energia: 'from-amber-500 to-yellow-500',
    economia: 'from-green-500 to-emerald-500',
    sustentabilidade: 'from-purple-500 to-indigo-500',
    geral: 'from-gray-500 to-slate-500'
  };

  return (
    <div className="p-4 md:p-8 bg-gradient-to-br from-blue-50 via-cyan-50/40 to-amber-50/30 min-h-screen">
      <div className="max-w-6xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-2 flex items-center gap-3">
            <GraduationCap className="w-10 h-10 text-purple-600" />
            Academia da Economia
          </h1>
          <p className="text-gray-600">Aprenda e ganhe experiência para economizar ainda mais</p>
        </div>

        <div className="grid md:grid-cols-3 gap-6 mb-8">
          <Card className="border-none shadow-lg bg-gradient-to-br from-purple-50 to-indigo-50">
            <CardContent className="p-6">
              <div className="flex items-center justify-between mb-2">
                <BookOpen className="w-8 h-8 text-purple-600" />
                <Badge className="bg-purple-100 text-purple-700">
                  {completedCount}/{contents.length}
                </Badge>
              </div>
              <p className="text-sm font-medium text-gray-600">Conteúdos Concluídos</p>
              <Progress value={(completedCount / contents.length) * 100} className="mt-2" />
            </CardContent>
          </Card>

          <Card className="border-none shadow-lg bg-gradient-to-br from-amber-50 to-yellow-50">
            <CardContent className="p-6">
              <div className="flex items-center justify-between mb-2">
                <Award className="w-8 h-8 text-amber-600" />
                <span className="text-2xl font-bold text-amber-700">{totalExperience}</span>
              </div>
              <p className="text-sm font-medium text-gray-600">XP Total Ganho</p>
            </CardContent>
          </Card>

          <Card className="border-none shadow-lg bg-gradient-to-br from-green-50 to-emerald-50">
            <CardContent className="p-6">
              <div className="flex items-center justify-between mb-2">
                <GraduationCap className="w-8 h-8 text-green-600" />
                <span className="text-2xl font-bold text-green-700">
                  {Math.floor(totalExperience / 100) + 1}
                </span>
              </div>
              <p className="text-sm font-medium text-gray-600">Nível Acadêmico</p>
            </CardContent>
          </Card>
        </div>

        <div className="grid md:grid-cols-2 gap-6">
          {contents.map((content) => (
            <motion.div
              key={content.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
            >
              <Card className={`border-none shadow-lg hover:shadow-xl transition-all duration-300 cursor-pointer ${
                content.completed ? 'opacity-75' : ''
              }`}
              onClick={() => !content.completed && setSelectedContent(content)}
              >
                <div className="relative overflow-hidden">
                  <div className={`absolute top-0 right-0 w-40 h-40 rounded-full blur-3xl opacity-20 bg-gradient-to-br ${categoryColors[content.category]}`}></div>
                  
                  <CardContent className="p-6 relative z-10">
                    <div className="flex items-start justify-between mb-3">
                      <div className={`p-3 rounded-xl bg-gradient-to-br ${categoryColors[content.category]}`}>
                        {content.completed ? (
                          <CheckCircle className="w-6 h-6 text-white" />
                        ) : (
                          <Lock className="w-6 h-6 text-white" />
                        )}
                      </div>
                      <div className="flex flex-col gap-2 items-end">
                        <Badge className={`${difficultyColors[content.difficulty]} border`}>
                          {content.difficulty}
                        </Badge>
                        {content.experience_points && (
                          <Badge className="bg-amber-100 text-amber-700 border-amber-300">
                            +{content.experience_points} XP
                          </Badge>
                        )}
                      </div>
                    </div>

                    <h3 className="font-bold text-lg text-gray-900 mb-2">{content.title}</h3>
                    <p className="text-sm text-gray-600 mb-4 line-clamp-2">{content.description}</p>

                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-2 text-sm text-gray-500">
                        <Clock className="w-4 h-4" />
                        <span>{content.duration_minutes} min</span>
                      </div>
                      {content.completed && (
                        <Badge className="bg-green-100 text-green-700 border-green-300">
                          <CheckCircle className="w-3 h-3 mr-1" />
                          Concluído
                        </Badge>
                      )}
                    </div>
                  </CardContent>
                </div>
              </Card>
            </motion.div>
          ))}
        </div>

        <Dialog open={!!selectedContent} onOpenChange={() => setSelectedContent(null)}>
          <DialogContent className="max-w-2xl max-h-[80vh] overflow-y-auto">
            <DialogHeader>
              <DialogTitle className="text-2xl">{selectedContent?.title}</DialogTitle>
            </DialogHeader>
            <div className="space-y-4">
              <div className="flex gap-2">
                <Badge className={`${difficultyColors[selectedContent?.difficulty]} border`}>
                  {selectedContent?.difficulty}
                </Badge>
                <Badge className="bg-amber-100 text-amber-700 border-amber-300">
                  +{selectedContent?.experience_points} XP
                </Badge>
              </div>
              <div className="prose prose-sm max-w-none">
                <p className="whitespace-pre-line">{selectedContent?.content}</p>
              </div>
              <Button
                onClick={() => completeContentMutation.mutate(selectedContent.id)}
                className="w-full bg-gradient-to-r from-green-500 to-emerald-500"
              >
                <CheckCircle className="w-4 h-4 mr-2" />
                Marcar como Concluído
              </Button>
            </div>
          </DialogContent>
        </Dialog>
      </div>
    </div>
  );
}